---
# Source: prometheus-operator/charts/grafana/templates/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-grafana
  namespace: monitoring
  labels:
    app: grafana
    chart: grafana-3.12.1
    release: prometheus
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      release: prometheus
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        release: prometheus
      annotations:
        checksum/config: 0c01f22be0115bc4aa7af5791093aaa3abb5faa69597b2d07e11115bffba6373
        checksum/dashboards-json-config: 283cc16b4b3dc051f3712a7651a0a7fe71a66d2ce8d137249e89facee616d27a
        checksum/sc-dashboard-provider-config: d9ee5b5588c124af9198e1cc9a2348c09bc5d9066c884227917d523b62cf575b
        checksum/secret: 3532d366a9a07acc1c35143e49ff796b7a2e4776169878eecd8437e5174bce46
    spec:
      
      serviceAccountName: prometheus-grafana
      securityContext:
        fsGroup: 472
        runAsUser: 472
        
      initContainers:
        - name: download-dashboards
          image: "appropriate/curl:latest"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: [ "-c", "mkdir -p /var/lib/grafana/dashboards/default && /bin/sh /etc/grafana/download_dashboards.sh" ]
          env:
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/download_dashboards.sh"
              subPath: download_dashboards.sh
            - name: storage
              mountPath: "/var/lib/grafana"
        - name: grafana-sc-datasources
          image: "kiwigrid/k8s-sidecar:0.1.20"
          imagePullPolicy: IfNotPresent
          env:
            - name: METHOD
              value: LIST
            - name: LABEL
              value: "grafana_datasource"
            - name: FOLDER
              value: "/etc/grafana/provisioning/datasources"
            - name: RESOURCE
              value: "both"
          resources:
            {}
            
          volumeMounts:
            - name: sc-datasources-volume
              mountPath: "/etc/grafana/provisioning/datasources"
      containers:
        - name: grafana-sc-dashboard
          image: "kiwigrid/k8s-sidecar:0.1.20"
          imagePullPolicy: IfNotPresent
          env:
            - name: LABEL
              value: "grafana_dashboard"
            - name: FOLDER
              value: "/tmp/dashboards"
            - name: RESOURCE
              value: "both"
          resources:
            {}
            
          volumeMounts:
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
        - name: grafana
          image: "grafana/grafana:6.4.2"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: dashboards-kubeapislo
              mountPath: "/var/lib/grafana/dashboards/kubeapislo/kubeapi-slo.json"
              subPath: "kubeapi-slo.json"
            - name: config
              mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml"
              subPath: dashboardproviders.yaml
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
            - name: sc-dashboard-provider
              mountPath: "/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml"
              subPath: provider.yaml
            - name: sc-datasources-volume
              mountPath: "/etc/grafana/provisioning/datasources"
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: prometheus-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: prometheus-grafana
                  key: admin-password
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
            
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            
          resources:
            {}
            
      volumes:
        - name: config
          configMap:
            name: prometheus-grafana
        - name: dashboards-kubeapislo
          configMap:
            name: prometheus-grafana-dashboards-kubeapislo
        - name: storage
          emptyDir: {}
        - name: sc-dashboard-volume
          emptyDir: {}
        - name: sc-dashboard-provider
          configMap:
            name: prometheus-grafana-config-dashboards
        - name: sc-datasources-volume
          emptyDir: {}