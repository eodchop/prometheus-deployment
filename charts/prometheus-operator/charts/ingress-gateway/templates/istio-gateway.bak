{{- if .Values.istio.enabled }}
apiVersion: v1
kind: Namespace
metadata:
  name: istio-gateways
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-gateway
  namespace: istio-gateways
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    - '*.cluster01.haas-420.pez.pivotal.io'
	port:
	  name: https
	  number: 443
	  protocol: HTTPS
	tls:
	  mode: SIMPLE
	  privateKey: /etc/istio/ingressgateway-certs/tls.key
	  serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
  - hosts:
    - '*.cluster01.haas-420.pez.pivotal.io'
	port:
	  name: http
	  number: 80
	  protocol: HTTP
	tls:
      httpsRedirect: true
  - hosts:
    - '*.cluster01.haas-420.pez.pivotal.io'
	port:
	  name: tls
	  number: 15443
	  protocol: TLS
	tls:
      mode: PASSTHROUGH
---
apiVersion: authentication.istio.io/v1alpha1
kind: MeshPolicy
metadata:
  name: default
  labels:
    app: security
	chart: security
	heritage: Tiller
	release: istio
spec:
  peers:
  - mtls: {}
---
apiVersion: authentication.istio.io/v1alpha1
kind: Policy
metadata:
  name: {{ $.Release.Namespace }}-policy
  namespace: {{ $.Release.Namespace }}
spec:
  peers:
  - mtls:
      mode: PERMISSIVE
  targets:
  - name: monitoring-policy
    ports:
	- number: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: {{ $.Release.Namespace }}-ingress
  namespace: {{ $.Release.Namespace }}
spec:
  host: '*.monitoring.svc.cluster.local'
  trafficPolicy:
    tls:
	  mode: DISABLE
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $.Release.Namespace }}-grafana
  namespace: {{ $.Release.Namespace }}
spec:
  gateways:
  - istio-gateways/istio-gateway
  hosts:
  - grafana.{{ template "ingress-gateway.clusterName" . }}
  http:
  - match:
    - uri:
	    prefix: /
	route:
	- destination:
	  host: prometheus-operator-grafana.monitoring.svc.cluster.local
	  port:
	    number: 80
{{- end }}