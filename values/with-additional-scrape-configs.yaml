prometheus:
  prometheusSpec:
    additionalScrapeConfigs:
    - job_name: "kubeEtcd-${CLUSTER_NAME}"
      file_sd_configs:
      - files:
        - '/prometheus/bosh_target_groups.json'
      scheme: https
      tls_config:
        ca_file: "/etc/prometheus/secrets/etcd-client/etcd-client-ca.crt"
        cert_file: "/etc/prometheus/secrets/etcd-client/etcd-client.crt"
        key_file:  "/etc/prometheus/secrets/etcd-client/etcd-client.key"
        server_name: "*.etcd.cfcr.internal"
      relabel_configs:
      - source_labels: [__meta_bosh_job_process_name]
        regex: etcd
        action: keep
      - source_labels: [__meta_bosh_deployment]
        regex: ${SERVICE_INSTANCE_ID}
        action: keep
      - source_labels: [__address__]
        regex:  '(.*)'
        target_label: __address__
        replacement: '${1}:2379'

kubeApiServer:
  serviceMonitor:
    interval: 30s
    metricRelabelings:
    - action: drop
      regex: etcd_(debugging|disk|request|server).*
      sourceLabels:
      - __name__
    - action: drop
      regex: apiserver_admission_controller_admission_latencies_seconds_.*
      sourceLabels:
      - __name__
    - action: drop
      regex: apiserver_admission_step_admission_latencies_seconds_.*
      sourceLabels:
      - __name__

kubeControllerManager:
  endpoints: ${ENDPOINTS}
  serviceMonitor:
    interval: 30s
    insecureSkipVerify: true
    metricRelabelings:
    - action: drop
      regex: etcd_(debugging|disk|request|server).*
      sourceLabels:
      - __name__

kubeScheduler:
  endpoints: ${ENDPOINTS}
  serviceMonitor:
    interval: 30s
    insecureSkipVerify: true
