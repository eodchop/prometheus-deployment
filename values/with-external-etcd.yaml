defaultRules:
  labels:
    role: alert-rules

prometheus:
  prometheusSpec:
    secrets:
      - etcd-client
    configMaps:
      - bosh-target-groups
    ruleSelector:
      matchLabels:
        role: alert-rules
        app: prometheus-operator
        release: monitoring

kubeApiServer:
  serviceMonitor:
    interval: 30s
    metricRelabelings:
    - action: drop
      regex: etcd_(debugging|disk|request|server).*
      sourceLabels:
      - __name__
    - action: drop
      regex: apiserver_admission_controller_admission_latencies_seconds_.*
      sourceLabels:
      - __name__
    - action: drop
      regex: apiserver_admission_step_admission_latencies_seconds_.*
      sourceLabels:
      - __name__

kubeControllerManager:
  endpoints: [172.28.1.2, 172.28.1.3, 172.28.1.4]
  serviceMonitor:
    interval: 30s
    insecureSkipVerify: true
    metricRelabelings:
    - action: drop
      regex: etcd_(debugging|disk|request|server).*
      sourceLabels:
      - __name__

kubeScheduler:
  endpoints: [172.28.1.2, 172.28.1.3, 172.28.1.4]
  serviceMonitor:
    interval: 30s
    insecureSkipVerify: true

# kubeEtcd:
#   endpoints: [172.28.1.2, 172.28.1.3, 172.28.1.4]
#   serviceMonitor:
#     interval: 30s
#     scheme: https
#     caFile: "/etc/prometheus/secrets/etcd-client/etcd-client-ca.crt"
#     certFile: "/etc/prometheus/secrets/etcd-client/etcd-client.crt"
#     keyFile: "/etc/prometheus/secrets/etcd-client/etcd-client.key"
#     serverName: "'*.etcd.cfcr.internal'"
